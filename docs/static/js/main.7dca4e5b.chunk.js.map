{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAoBhD,OAEI,0BAAMC,SAfW,SAACC,GAClBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAUd,gCAAMD,EAAN,KACA,2BACIQ,KAAK,OACLC,MAAUT,EACVU,SAxBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAON,IACtB,+BAAKA,EAAL,OCLCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAXIC,qBAAU,WACNxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAI1B,CAACpB,IAEGqB,EDdyBK,CAAa1B,GAAhCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAGrB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAqDhB,EAArD,KACCoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACLD,UEfpBkB,EAAe,WAAO,IAAD,EAGM1C,mBAAS,CAAC,gBAHhB,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAQ9B,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BACA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACxB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAWA,U,MCbnC8B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.7dca4e5b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e)=> {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n        \r\n\r\n    };\r\n    \r\n    return (\r\n        \r\n        <form onSubmit={ handleSubmit} >\r\n            <h1> {inputValue} </h1>\r\n            <input\r\n                type=\"text\" \r\n                value = { inputValue }\r\n                onChange= { handleInputChange }\r\n                />\r\n        </form>\r\n        \r\n    )\r\n}\r\n \r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=raTPeM94jdmsbUYFXtYRR95qMbk5OaXu`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n};\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt = {title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading }= useFetchGifs(category);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            \r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img =>(\r\n                        <GifGridItem \r\n                            key= {img.id}\r\n                            { ...img } />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n        useEffect(() => {\r\n            getGifs( category )\r\n                .then (imgs => {\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                });\r\n        \r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n    // const handleAdd= () => {\r\n    //     setcategories([...categories, 'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory setCategories= {setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                    <GifGrid\r\n                        key={category}\r\n                        category= {category}\r\n                    />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { GifExpertApp } from './GifExpertApp';\r\n\r\nimport './index.css';\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <GifExpertApp /> ,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}